include conf/layerinfo.inc
INHERIT_DISTRO="devshell sstate license remove-libtool" 
INHERIT += "mvl"

INHERIT += "image-groups"

TCLIBCAPPEND=""
PACKAGE_CLASSES = "package_rpm"
IMAGE_FSTYPES:append = " ext2.gz"
#IMAGE Defaults

VIRTUAL-RUNTIME_login_manager ?= "busybox"
VIRTUAL-RUNTIME_init_manager = "${@bb.utils.contains('USE_SYSTEMD', '1', 'systemd', 'sysvinit', d)}"
VIRTUAL-RUNTIME_initscripts = "${@bb.utils.contains('USE_SYSTEMD', '1', 'systemd-compat-units', 'initscripts', d)}"
VIRTUAL-RUNTIME_base-utils-syslog ?= "${@bb.utils.contains("BBFILE_COLLECTIONS", "openembedded-layer", " syslog-ng ", " sysklogd ", d)}"
VIRTUAL-RUNTIME_syslog ?= "${@bb.utils.contains("BBFILE_COLLECTIONS", "openembedded-layer", " syslog-ng ", " sysklogd ", d)}"
VIRTUAL-RUNTIME_keymaps ?= "keymaps"
VIRTUAL-RUNTIME_webserver ?= "apache2"

# Set Vanity values.
TARGET_VENDOR="-montavista"
SDK_VENDOR = "-montavistasdk"
SDK_NAME_PREFIX = "montavista"
SDK_VERSION = "${DISTRO_VERSION}"

# Emit shell script variables.
require conf/emit_shellscript.inc

# Export drlog.
require conf/drlog.inc

# Exportvars for devrocket.

INHERIT += "exportvars"
EXPORTVARSRUN="1"

# Generate mirror tarballs.

BB_GENERATE_MIRROR_TARBALLS ?= "1"

# Use Hashed stamps. 

BB_SIGNATURE_HANDLER = "OEBasicHash"

MVL_MIRROR="http://someplace.org/"
PREFERRED_PROVIDER_virtual/gettext ?= "gettext"
PREFERRED_PROVIDER_jpeg ?= "jpeg"
PREFERRED_PROVIDER_jpeg-native ?= "jpeg-native"
PREFERRED_PROVIDER_start-stop-daemon ?= "dpkg"

USE_SYSTEMD ?= "0"

DISTROOVERRIDES .= ":selinux"
MACHINEOVERRIDES .= ":${TUNE_ARCH}"
IMAGE_FEATURES += "mvl package-management"
#DISTRO_FEATURES:append =  "${@bb.utils.contains("BBFILE_COLLECTIONS", "selinux", " selinux ", "", d)}"
DISTRO_FEATURES:append =  "${@bb.utils.contains("BBFILE_COLLECTIONS", "virtualization-layer", " virtualization ", "", d)}"
DISTRO_FEATURES:append = " containers pam multiarch mvl opengl x11 ${@bb.utils.contains('USE_SYSTEMD', '1', 'systemd', 'sysvinit', d)} "
DISTRO_FEATURES:append = "mvista-base" 
DISTRO_FEATURES:append = "${@bb.utils.contains("CGX_PROFILES", "dataplane", " mvista-dataplane ", "", d)}"
DISTRO_FEATURES:append = "${@bb.utils.contains("CGX_PROFILES", "security", " mvista-security ", "", d)}"
DISTRO_FEATURES:append = "${@bb.utils.contains("CGX_PROFILES", "virtualization", " mvista-virtualization ", "", d)}"
DISTRO_FEATURES:append = "${@bb.utils.contains("CGX_PROFILES", "iot", " mvista-iot ", "", d)}"
DISTRO_FEATURES:append = "${@bb.utils.contains("CGX_PROFILES", "cgl", " mvista-cgl ", "", d)}"
DISTRO_FEATURES:append = "${@bb.utils.contains("CGX_PROFILES", "graphics", " mvista-graphics ", "", d)}"
DISTRO_FEATURES:append = " libc-locales libc-charsets libc-locale-code "
DISTRO_FEATURES:append = " ptest virtualization qatest security "

DISTRO_FEATURES:remove = "gobject-introspection-data"
DISTRO_FEATURES_BACKFILL_CONSIDERED = " ${@bb.utils.contains('USE_SYSTEMD', '1', 'sysvinit', '', d)} "
# Use extrausers to add extra user and group configurations.
INHERIT += "extrausers"

# Use skiplist
include conf/distro/include/mvl-skiplist.inc

include conf/distro/include/common-image.inc

# Don't die on dangling depends.
BB_DANGLINGAPPENDS_WARNONLY = "1"

#reduce to single lsb string.
NATIVELSBSTRING_mvista-cgx='universal'

# Do not error out if there is a kernel version mismatch.
KERNEL_VERSION_SANITY_SKIP="1"

#Turn off autoref for linux linaro this breaks parsing on no network.
AUTOREV:pn-linux-linaro = "8abe04ab20f5e2b7bc76b5e69860facc3a743760"
MERGEPERFILEDEPS_mvista-cgx = "0"

# Don't rename sources in a mirror
BB_NO_MODIFY_MIRROR = "1"
SUB_DISTRO ??= "Carrier Grade Express"
DISTRO_NAME="MontaVista ${SUB_DISTRO} Linux"
DISTRO_VERSION = "4.0"
DISTRO_CODENAME = "CGX4.0"

BB_BASEHASH_IGNORE_VARS:append = " MVLFETCH_OPTS MVLBASE STAGING_KERNEL_DIR LM_LICENSE_FILE ENABLE_CGE7_LM MVL_TOOLS_TOPLEVEL_PREFIX MSD_VERSION "
BB_BASEHASH_IGNORE_VARS:append = " PLUGIN_ID FEATURE_ID PLUGIN_NAME FEATURE_NAME VENDOR_NAME ADK_VERSION MSD_REVISION SSTATE_PKGARCH "
BB_BASEHASH_IGNORE_VARS:append = " HOST_FLAGS_FIXUPS SITEINFO_BITS TOPDIR KERNEL_CFG_LOCATION CSL_VER_NATIVE_GCC HOST_USER_UID"
BB_BASEHASH_IGNORE_VARS:append = " DRLOG_HANDLER"

export LM_LICENSE_FILE 
export ENABLE_CGE7_LM
SDKPATH = "/opt/${SDK_NAME_PREFIX}"

LICENSE_CREATE_PACKAGE ?= "1"

HOST_FLAGS_FIXUPS='${@bb.utils.contains("BUILD_ARCH", "i686", " -march=i686 ", "", d)}'
BUILD_CFLAGS:append = '${HOST_FLAGS_FIXUPS}'

PREFERRED_PROVIDER_virtual/kernel ?= "linux-mvista"
SRCPV:pn-linux-mvista ?= "${@bb.fetch2.get_srcrev(d)}"

PREFERRED_VERSION_linux-yocto ?= "5.10%"

PREFERRED_PROVIDER_virtual/libintl ?= "glibc"

#Perl is fixed locally waiting on upstream fix
SKIP_RECIPE[libnet-dns-perl]=""

#Add cgx-profile support
INHERIT += "cgx-profiles"

BUILDCFG_VARS:append = " CGX_PROFILES "

# export complete path of compiler
OECMAKE_C_COMPILER:class-target = "$(which $(echo ${CC} | while read COMPILER REST; do echo $COMPILER; done))"
OECMAKE_CXX_COMPILER:class-target = "$(which $(echo ${CXX} | while read COMPILER REST; do echo $COMPILER; done))"

# Include feature selection file, which includes kernel fragments
# files (.cfg) and dependent userspace applications based on available
# profiles
include conf/distro/extra-features/select-features.inc
#LINUXLIBCVERSION ?= "5.4%"

# Add content required to run toaster to buildtools tarball
TOOLCHAIN_HOST_TASK:append:pn-buildtools-tarball = " \
    nativesdk-python3-django \
    nativesdk-python3-pytz \
    nativesdk-python3-beautifulsoup4 \
"
# Preferr 64bit binaries by default
RPM_PREFER_ELF_ARCH ?= "2"

UNWINDERLIB="${@bb.utils.contains("BBFILE_COLLECTIONS", "clang-layer", "libcxx", "libunwind", d)}"
UNWINDERLIB_aarchilp32="libunwind"
UNWINDERLIB:armv6="libunwind"
UNWINDERLIB:armeb="libunwind"
UNWINDERLIB:riscv64=""
UNWINDERLIB_riscv=""
UNWINDERLIB_cortexa57-cortexa53="libunwind"
PREFERRED_PROVIDER_libunwind_mvista-cgx ?= "${UNWINDERLIB}"
MACHINE_FEATURES:remove = 'qemu-usermode'

DEFAULT_ENFORCING ?= "disabled"

ROOTFS_PKGMANAGE_BOOTSTRAP ?= ""
include conf/distro/include/layer-includes.inc

INHERIT += "serialize-recipe"

SERIALIZE_RECIPE:pn-icedtea7-native ?= "1"

# uninative
require conf/distro/include/yocto-uninative.inc
INHERIT += "uninative"
LSB_WARN="0"
LLVM_TARGETS_TO_BUILD_TARGET ?= ""
REPRODUCIBLE_TIMESTAMP_ROOTFS ?=""

require ${@bb.utils.contains('BBFILE_COLLECTIONS', 'meta-lmp-base', 'conf/distro/include/meta-lmp-base.inc', '', d)}

PTESTS_SLOW:append = " libunwind-ptest "
RM_WORK_EXCLUDE:append  = " qemu-xilinx-helper-native "

# For Build History
INHERIT += "buildhistory"
ERROR_QA_remove_pn-linux-mvista = "version-going-backwards"
